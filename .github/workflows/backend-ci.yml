
name: Backend CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:5.0
        # Start MongoDB in replica set mode. Bind to 0.0.0.0 to allow connections from the runner.
        command: [ "mongod", "--replSet", "rs0", "--bind_ip", "0.0.0.0,mongodb" ]
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Wait for MongoDB
        run: |
          # Wait up to ~60s total for Mongo to become available
          for i in {1..30}; do
            if mongo --eval "db.runCommand({ ping: 1 })" &>/dev/null; then
              echo "MongoDB is up!"
              break
            fi
            echo "Waiting for MongoDB to start..."
            sleep 2
          done

      - name: Initialize Replica Set
        run: |
          mongo --eval "rs.initiate()"
          # Give the replica set time to finish initialization
          sleep 5
          mongo --eval "rs.status()"

      - name: Install Dependencies
        env:
          # You can add or remove any secrets you need for installation here
          NODE_ENV: test
        run: npm install

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        env:
          # Override MONGODB_URI to point to our local replica set
          # Adjust "test" to your preferred DB name if necessary
          MONGODB_URI: "mongodb://127.0.0.1:27017/test?replicaSet=rs0"

          # Include any other secrets that your tests rely on:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          # ...
        run: npm test

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/

      # (Optional) Check formatting
      - name: Check Formatting
        run: npm run format -- --check

