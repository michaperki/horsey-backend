
**File Location:** backend/tests/lichessController.test.js

**File Purpose:**  
Tests the `LichessController`'s ability to validate game results and process associated bets, ensuring correct functionality and error handling.

**Key Functionality:**
- Tests successful processing of winning bets, including token minting and email notifications.
- Validates handling of invalid game IDs and ensures proper error responses.
- Ensures that no action is taken when no pending bets are found for a game.
- Tests failure scenarios in token minting and ensures correct bet status updates.
- Mocks external services like `axios`, `emailService`, and `tokenService` to isolate controller logic.

**Dependencies:**
- `supertest`
- `mongoose`
- `User` model
- `Bet` model
- `bcrypt`
- `jsonwebtoken`
- `jest`

**Connections:**
- Interacts with the Express application server (`../server`).
- Communicates with `User` and `Bet` models to manage bet data.
- Utilizes mocked services to handle external interactions like API calls and email sending.

**Current Status:**
- Completed: Comprehensive test cases for `LichessController` are implemented.

**Issues/Challenges:**
- Ensuring accurate simulation of external service failures.
- Managing test data to cover various game outcome scenarios.

**Next Steps:**
- Add tests for additional game outcome types and statuses.
- Implement integration tests to cover full validation workflows.

